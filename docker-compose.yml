version: '2'

# PORTS
#     api:     1111:8001
#     docs:    2222:8002
#     mock:    3333:8003
#     monitor: 4444:8004
#              6666:8006 for periodically
#     main:    5555:8005
#     storage: 27017:27017

services:
  api:
    image: poseidon-api
    container_name: poseidon-api
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - 1111:8001
  docs:
    image: poseidon-docs
    container_name: poseidon-docs
    build:
      context: .
      dockerfile: Dockerfile.docs
    ports:
      - 2222:8002
  mock:
    image: mock-controller
    container_name: mock-controller
    build:
      context: .
      dockerfile: Dockerfile.mock
    environment:
      - ALLOW_ORIGIN = http://$DOCKER_URL:8003
    depends_on:
      - monitor
    ports:
      - 3333:8003
  monitor:
    depends_on:
      - api
    image: poseidon-monitor
    container_name: poseidon-monitor
    build:
      context: .
      dockerfile: Dockerfile.monitor
    ports:
      - 4444:8004
      - 6666:8006
    environment:
      - ALLOW_ORIGIN = http://$DOCKER_URL:1111
  main:
    image: poseidon-main
    container_name: poseidon-main
    build:
      context: .
      dockerfile: Dockerfile.main
    ports:
      - 5555:8005
  storageWorkaround:
    # http://www.diogogmt.com/running-mongodb-with-docker-and-compose/
    container_name: poseidon-storageWorkaround
    image: mongo
    volumes:
      - /data/db
  storage:
    container_name: poseidon-storage
    image: mongo
    volumes_from:
      - storageWorkaround
    ports:
      - 27017:27017
    command: --smallfiles --rest --auth
  periodically:
    image: poseidon-periodically
    container_name: poseidon-periodically
    build:
      context: .
      dockerfile: Dockerfile.periodically
    network_mode: "container:poseidon-monitor"
    depends_on:
      - monitor
