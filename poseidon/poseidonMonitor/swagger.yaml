swagger: '2.0'
info:
  title: PoseidonRest API
  description: This contains the documentation and a functional PoseidonRest API testing sandbox.
  version: v0.1.0-dev
host: mydomain
schemes:
  - http
basePath: /v1
produces:
  - application/json
paths:
  /pcap/{pcap_file}/{output_type}:
    get:
      summary: Parse PCAP Files
      description: >
        This endpoint returns a parsed PCAP file in another format.
      parameters:
        - in: path
          name: pcap_file
          description: path to the PCAP file stored in /tmp
          required: true
          type: string
          format: string
        - in: path
          name: output_type
          description: type of file to parse, currently expects PCAP
          required: true
          type: string
          format: string
      produces:
        - text/text
      tags:
        - Data
      responses:
        '200':
          description: Returns a string of the new format of the parsed PCAP file.
  /version:
    get:
      summary: Version
      description: >
        This endpoint returns the current version and build information.
      produces:
        - application/json
      tags:
        - Meta
      responses:
        '200':
          description: Returns a JSON string of the version and build
  /nbca/{resource}:
    get:
      summary: North Bound Controller Abstraction
      description: >
        This endpoint talks to the north bound controller abstraction layer
      parameters:
        - in: path
          name: resource
          description: information to pass to the nbca tasking
          required: true
          type: string
          format: string
      produces:
        - text/text
      tags:
        - Data
      responses:
        '200':
          description: Returns something
  /action/{resource}:
    get:
      summary: action
      description: >
        This endpoint talks to the action
      parameters:
        - in: path
          name: resource
          description: information to pass to the action
          required: true
          type: string
          format: string
      produces:
        - text/text
      tags:
        - Data
      responses:
        '200':
          description: Returns something
  /config:
    get:
      summary: Config
      description: >
        This endpoint returns the configuration file.
      produces:
        - application/json
      tags:
        - Data
      responses:
        '200':
          description: Returns a JSON string of the config file
  /config/{section}:
    get:
      summary: Config
      description: >
        This endpoint talks to the config
      parameters:
        - in: path
          name: section
          description: section to retrieve from config file
          required: true
          type: string
          format: string
      produces:
        - application/json
      tags:
        - Data
      responses:
        '200':
          description: Returns a JSON string of a section of the config file
  /config/{section}/{field}:
    get:
      summary: config
      description: >
        This endpoint talks to the config
      parameters:
        - in: path
          name: section
          description: section of key to retrieve from config file
          required: true
          type: string
          format: string
        - in: path
          name: field
          description: field of desired value from config file
          required: true
          type: string
          format: string
      produces:
        - text/text
      tags:
        - Data
      responses:
        '200':
          description: Returns value of field from config file
  /history/{resource}:
    get:
      summary: history
      description: >
        This endpoint talks to the history
      parameters:
        - in: path
          name: resource
          description: information to pass to history
          required: true
          type: string
          format: string
      produces:
        - text/text
      tags:
        - Data
      responses:
        '200':
          description: Returns something
  /polling:
    get:
      summary: Poll to Callback
      description: >
        This endpoint fetches latest controller state
      produces:
        - application/json
      tags:
        - Meta
      responses:
        '200':
          description: Returns a JSON string
  /storage:
    get:
      summary: Get running database names
      description: >
        Retrieves names of running databases
      produces:
       - application/json
      tags:
        - Data
      responses:
        '200':
          description: Returns a JSON of names of running databases
  /storage/{database}:
    get:
      summary: Get collection names for given database
      description: >
        Retrieves collection names of a database
      parameters:
        - in: path
          name: database
          description: database to retrieve collection names
          required: true
          type: string
          format: string
      produces:
        - application/json
      tags:
        - Data
      responses:
        '200':
          description: Returns JSON of names of collections for given database
  /storage/{database}/{collection}:
    get:
      summary: Get count of documents in given collection for given database
      description: >
        Retrieves number of documents for a given collection
      parameters:
        - in: path
          name: database
          description: database for given collection
          required: true
          type: string
          format: string
        - in: path
          name: collection
          description: name of collection to get document count
          required: true
          type: string
          format: string
      produces:
        - application/json
      tags:
        - Data
      responses:
        '200':
          description: Returns count of documents for given collection in given database
  /storage/doc/{database}/{collection}/{doc_id}:
    get:
      summary: get document from given collection
      description: >
        Retrieves document from given collection in given database
      parameters:
        - in: path
          name: database
          description: name of database
          required: true
          type: string
          format: string
        - in: path
          name: collection
          description: name of collection to search
          required: true
          type: string
          format: string
        - in: path
          name: doc_id
          description: id of document to search for
          required: true
          type: string
          format: string
      produces:
        - application/json
      tags:
        - Data
      responses:
        '200':
          description: Returns JSON of document
  /storage/query/{database}/{collection}/{query_str}:
    get:
      summary: query database with given query
      description: >
        Query given collection in given database with given query string, note queries should be encoded according to utf8
      parameters:
        - in: path
          name: database
          description: database to query
          required: true
          type: string
          format: string
        - in: path
          name: collection
          description: collection to query
          required: true
          type: string
          format: string
        - in: path
          name: query_str
          description: query in utf8 encoding
          required: true
          type: string
          format: string
      produces:
        - application/json
      tags:
        - Data
      responses:
        '200':
          description: Returns JSON of query response
