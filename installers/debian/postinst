#!/bin/bash

set -e

. /usr/share/debconf/confmodule
db_version 2.0

red='\e[0;31m'
endColor='\e[0m'
failed=false
if db_go; then
    echo "# Generated from debconf - do not edit by hand, to change configuration options run: poseidon configure" > /etc/poseidon/default.conf
    { echo "#"; echo "#"; echo ""; } >> /etc/poseidon/default.conf

    # read from db to set variables in default.conf
    db_get poseidon/controller_type
    if [[ ! -z "$RET" ]]; then
        if [ "$RET" == "Faucet" ]; then
            echo "controller_type=faucet" >> /etc/poseidon/default.conf
            db_get poseidon/faucet_same_host
            if [ "$RET" == "No" ]; then
                db_get poseidon/faucet_controller_uri
                if [[ ! -z "$RET" ]]; then
                    echo "controller_uri=$RET" >> /etc/poseidon/default.conf
                else
                    echo >&2 -e "${red}You need to specify the IP or hostname of the Faucet controller.${endColor}"
                    db_unregister poseidon/faucet_controller_uri
                    failed=true
                fi
                db_get poseidon/faucet_controller_user
                if [[ ! -z "$RET" ]]; then
                    echo "controller_user=$RET" >> /etc/poseidon/default.conf
                else
                    echo >&2 -e "${red}You need to specify the username to SSH to the Faucet controller.${endColor}"
                    db_unregister poseidon/faucet_controller_user
                    failed=true
                fi
                db_get poseidon/faucet_controller_pass
                if [[ ! -z "$RET" ]]; then
                    echo "controller_pass=$RET" >> /etc/poseidon/default.conf
                else
                    echo >&2 -e "${red}You need to specify the password to SSH to the Faucet controller.${endColor}"
                    db_unregister poseidon/faucet_controller_pass
                    failed=true
                fi
            elif [ "$RET" == "Yes" ]; then
                echo "controller_uri=" >> /etc/poseidon/default.conf
            fi
            db_get poseidon/faucet_controller_mirror_ports
            if [[ ! -z "$RET" ]]; then
                echo "controller_mirror_ports=$RET" >> /etc/poseidon/default.conf
            fi
        else # BCF
            echo "controller_type=bcf" >> /etc/poseidon/default.conf
            db_get poseidon/bcf_controller_uri
            if [[ ! -z "$RET" ]]; then
                echo "controller_uri=$RET" >> /etc/poseidon/default.conf
            else
                echo >&2 -e "${red}You need to specify the IP or hostname of the BigSwitch Cloud Fabric controller.${endColor}"
                db_unregister poseidon/bcf_controller_uri
                failed=true
            fi
            db_get poseidon/bcf_controller_user
            if [[ ! -z "$RET" ]]; then
                echo "controller_user=$RET" >> /etc/poseidon/default.conf
            else
                echo >&2 -e "${red}You need to specify the username to connect to the BigSwitch Cloud Fabric controller.${endColor}"
                db_unregister poseidon/bcf_controller_user
                failed=true
            fi
            db_get poseidon/bcf_controller_pass
            if [[ ! -z "$RET" ]]; then
                echo "controller_pass=$RET" >> /etc/poseidon/default.conf
            else
                echo >&2 -e "${red}You need to specify the password to connect to the BigSwitch Cloud Fabric controller.${endColor}"
                db_unregister poseidon/bcf_controller_pass
                failed=true
            fi
        fi
    else
        echo >&2 -e "${red}You need to specify the controller type.${endColor}"
        db_unregister poseidon/controller_type
        failed=true
    fi

    db_get poseidon/collector_nic
    if [[ ! -z "$RET" ]]; then
        echo "collector_nic=$RET" >> /etc/poseidon/default.conf
    else
        echo >&2 -e "${red}You need to specify the collector NIC.${endColor}"
        db_unregister poseidon/collector_nic
        failed=true
    fi
    db_get poseidon/max_concurrent_reinvestigations
    if [[ ! -z "$RET" ]]; then
        echo "max_concurrent_reinvestigations=$RET" >> /etc/poseidon/default.conf
    fi

    if [ "$failed" == true ]; then
        exit 1
    fi

    docker load -i /opt/poseidon/dist/cyberreboot-vent.tar
    docker load -i /opt/poseidon/dist/cyberreboot-vent-file-drop.tar
    docker load -i /opt/poseidon/dist/cyberreboot-vent-network-tap.tar
    docker load -i /opt/poseidon/dist/cyberreboot-vent-rabbitmq.tar
    docker load -i /opt/poseidon/dist/cyberreboot-vent-redis.tar
    docker load -i /opt/poseidon/dist/cyberreboot-vent-rq-dashboard.tar
    docker load -i /opt/poseidon/dist/cyberreboot-vent-rq-worker.tar
    docker load -i /opt/poseidon/dist/cyberreboot-vent-syslog.tar
    docker load -i /opt/poseidon/dist/cyberreboot-poseidon-api.tar
    docker load -i /opt/poseidon/dist/cyberreboot-vent-plugins-pcap-to-node-pcap.tar
    docker load -i /opt/poseidon/dist/cyberreboot-vent-plugins-p0f.tar
    docker load -i /opt/poseidon/dist/cyberreboot-vent-plugins-tcprewrite-dot1q.tar
    docker load -i /opt/poseidon/dist/cyberreboot-crviz.tar
    #docker load -i /opt/poseidon/dist/cyberreboot-poseidonml.tar

    # start poseidon service
    systemctl stop poseidon || true
    systemctl enable poseidon
    systemctl start poseidon

    exit 0
else
    exit 1
fi

