#!/bin/bash

set -e

. /usr/share/debconf/confmodule
db_version 2.0

db_capb backup

red='\e[0;31m'
endColor='\e[0m'

STATE=1
while [ "$STATE" != 0 ] && [ "$STATE" != 8 ]; do
    case "$STATE" in
    1)
        db_input critical poseidon/controller_type || true
    ;;

    2)
        db_get poseidon/controller_type
        if [ "$RET" == "Faucet" ]; then
            db_input critical poseidon/faucet_same_host || true
        else # BCF
            db_input critical poseidon/bcf_controller_uri || true
        fi
    ;;

    3)
        db_get poseidon/controller_type
        if [ "$RET" == "Faucet" ]; then
            db_get poseidon/faucet_same_host
            if [ "$RET" == "No" ]; then
                db_input critical poseidon/faucet_controller_uri || true
            fi
        else # BCF
            db_input critical poseidon/bcf_controller_user || true
            db_input critical poseidon/bcf_controller_pass || true
        fi
    ;;

    4)
        db_get poseidon/controller_type
        if [ "$RET" == "Faucet" ]; then
            db_get poseidon/faucet_same_host
            if [ "$RET" == "No" ]; then
                db_input critical poseidon/faucet_controller_user || true
                db_input critical poseidon/faucet_controller_pass || true
            fi
        fi
    ;;

    5)
        db_get poseidon/controller_type
        if [ "$RET" == "Faucet" ]; then
            db_input critical poseidon/faucet_controller_mirror_ports || true
        fi
    ;;

    6)
        db_input critical poseidon/collector_nic || true
    ;;

    7)
        db_input high poseidon/max_concurrent_reinvestigations || true
    ;;
    esac

    if db_go; then
        STATE=$((STATE + 1))
    else
        STATE=$((STATE - 1))
    fi
done

failed=false
if db_go; then
    echo "# Generated from debconf - do not edit by hand, to change configation options run: poseidon configure" > /etc/poseidon/default.conf
    { echo "#"; echo "#"; echo ""; } >> /etc/poseidon/default.conf
    # read from db to set variables in default.conf
    db_get poseidon/controller_type
    if [[ ! -z "$RET" ]]; then
        if [ "$RET" == "Faucet" ]; then
            echo "controller_type=faucet" >> /etc/poseidon/default.conf
            db_get poseidon/faucet_same_host
            if [ "$RET" == "No" ]; then
                db_get poseidon/faucet_controller_uri
                if [[ ! -z "$RET" ]]; then
                    echo "controller_uri=$RET" >> /etc/poseidon/default.conf
                else
                    echo >&2 -e "${red}You need to specify the IP or hostname of the Faucet controller.${endColor}"
                    db_unregister poseidon/faucet_controller_uri
                    failed=true
                fi
                db_get poseidon/faucet_controller_user
                if [[ ! -z "$RET" ]]; then
                    echo "controller_user=$RET" >> /etc/poseidon/default.conf
                else
                    echo >&2 -e "${red}You need to specify the username to SSH to the Faucet controller.${endColor}"
                    db_unregister poseidon/faucet_controller_user
                    failed=true
                fi
                db_get poseidon/faucet_controller_pass
                if [[ ! -z "$RET" ]]; then
                    echo "controller_pass=$RET" >> /etc/poseidon/default.conf
                else
                    echo >&2 -e "${red}You need to specify the password to SSH to the Faucet controller.${endColor}"
                    db_unregister poseidon/faucet_controller_pass
                    failed=true
                fi
            fi
            db_get poseidon/faucet_controller_mirror_ports
            if [[ ! -z "$RET" ]]; then
                echo "controller_mirror_ports=$RET" >> /etc/poseidon/default.conf
            fi
        else # BCF
            echo "controller_type=bcf" >> /etc/poseidon/default.conf
            db_get poseidon/bcf_controller_uri
            if [[ ! -z "$RET" ]]; then
                echo "controller_uri=$RET" >> /etc/poseidon/default.conf
            else
                echo >&2 -e "${red}You need to specify the IP or hostname of the BigSwitch Cloud Fabric controller.${endColor}"
                db_unregister poseidon/bcf_controller_uri
                failed=true
            fi
            db_get poseidon/bcf_controller_user
            if [[ ! -z "$RET" ]]; then
                echo "controller_user=$RET" >> /etc/poseidon/default.conf
            else
                echo >&2 -e "${red}You need to specify the username to connect to the BigSwitch Cloud Fabric controller.${endColor}"
                db_unregister poseidon/bcf_controller_user
                failed=true
            fi
            db_get poseidon/bcf_controller_pass
            if [[ ! -z "$RET" ]]; then
                echo "controller_pass=$RET" >> /etc/poseidon/default.conf
            else
                echo >&2 -e "${red}You need to specify the password to connect to the BigSwitch Cloud Fabric controller.${endColor}"
                db_unregister poseidon/bcf_controller_pass
                failed=true
            fi
        fi
    fi

    db_get poseidon/collector_nic
    if [[ ! -z "$RET" ]]; then
        echo "collector_nic=$RET" >> /etc/poseidon/default.conf
    else
        echo >&2 -e "${red}You need to specify the collector NIC.${endColor}"
        db_unregister poseidon/collector_nic
        failed=true
    fi
    db_get poseidon/max_concurrent_reinvestigations
    if [[ ! -z "$RET" ]]; then
        echo "max_concurrent_reinvestigations=$RET" >> /etc/poseidon/default.conf
    fi
    if [ "$failed" == true ]; then
        exit 1
    fi
    systemctl stop poseidon || true
    systemctl enable poseidon
    systemctl start poseidon
    exit 0
else
    exit 1
fi

